"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&_setPrototypeOf(e,t)}function _setPrototypeOf(e,t){return(_setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function _createSuper(o){var r=_isNativeReflectConstruct();return function(){var e,t=_getPrototypeOf(o);return _possibleConstructorReturn(this,r?(e=_getPrototypeOf(this).constructor,Reflect.construct(t,arguments,e)):t.apply(this,arguments))}}function _possibleConstructorReturn(e,t){if(t&&("object"===_typeof(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(e)}function _assertThisInitialized(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}function _getPrototypeOf(e){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _defineProperty(e,t,o){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function _defineProperties(e,t){for(var o=0;o<t.length;o++){var r=t[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,_toPropertyKey(r.key),r)}}function _createClass(e,t,o){return t&&_defineProperties(e.prototype,t),o&&_defineProperties(e,o),Object.defineProperty(e,"prototype",{writable:!1}),e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"===_typeof(e)?e:String(e)}function _toPrimitive(e,t){if("object"!==_typeof(e)||null===e)return e;var o=e[Symbol.toPrimitive];if(void 0===o)return("string"===t?String:Number)(e);o=o.call(e,t||"default");if("object"!==_typeof(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _classPrivateMethodInitSpec(e,t){_checkPrivateRedeclaration(e,t),t.add(e)}function _classPrivateFieldInitSpec(e,t,o){_checkPrivateRedeclaration(e,t),t.set(e,o)}function _checkPrivateRedeclaration(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function _classPrivateFieldGet(e,t){return _classApplyDescriptorGet(e,_classExtractFieldDescriptor(e,t,"get"))}function _classApplyDescriptorGet(e,t){return t.get?t.get.call(e):t.value}function _classPrivateFieldSet(e,t,o){return _classApplyDescriptorSet(e,_classExtractFieldDescriptor(e,t,"set"),o),o}function _classExtractFieldDescriptor(e,t,o){if(t.has(e))return t.get(e);throw new TypeError("attempted to "+o+" private field on non-instance")}function _classApplyDescriptorSet(e,t,o){if(t.set)t.set.call(e,o);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=o}}function _classPrivateMethodGet(e,t,o){if(t.has(e))return o;throw new TypeError("attempted to get private field on non-instance")}var months=["January","February","March","April","May","June","July","August","September","October","November","December"],form=document.querySelector(".form"),containerWorkouts=document.querySelector(".workouts"),inputType=document.querySelector(".form__input--type"),inputDistance=document.querySelector(".form__input--distance"),inputDuration=document.querySelector(".form__input--duration"),inputCadence=document.querySelector(".form__input--cadence"),inputElevation=document.querySelector(".form__input--elevation"),_map=new WeakMap,_mapEvent=new WeakMap,_getPosition=new WeakSet,_loadMap=new WeakSet,_showForm=new WeakSet,_toggleElevationField=new WeakSet,_newWorkout=new WeakSet,App=_createClass(function e(){_classCallCheck(this,e),_classPrivateMethodInitSpec(this,_newWorkout),_classPrivateMethodInitSpec(this,_toggleElevationField),_classPrivateMethodInitSpec(this,_showForm),_classPrivateMethodInitSpec(this,_loadMap),_classPrivateMethodInitSpec(this,_getPosition),_classPrivateFieldInitSpec(this,_map,{writable:!0,value:void 0}),_classPrivateFieldInitSpec(this,_mapEvent,{writable:!0,value:void 0}),_classPrivateMethodGet(this,_getPosition,_getPosition2).call(this),form.addEventListener("submit",_classPrivateMethodGet(this,_newWorkout,_newWorkout2).bind(this)),inputType.addEventListener("change",_classPrivateMethodGet(this,_toggleElevationField,_toggleElevationField2))});function _getPosition2(){navigator.geolocation.getCurrentPosition(_classPrivateMethodGet(this,_loadMap,_loadMap2).bind(this),function(){console.log("nie moge pobrac wspolrzednych")})}function _loadMap2(e){e=[e.coords.latitude,e.coords.longitude];_classPrivateFieldSet(this,_map,L.map("map").setView(e,13)),L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}).addTo(_classPrivateFieldGet(this,_map)),_classPrivateFieldGet(this,_map).on("click",_classPrivateMethodGet(this,_showForm,_showForm2).bind(this))}function _showForm2(e){_classPrivateFieldSet(this,_mapEvent,e),form.classList.remove("hidden"),inputDistance.focus()}function _toggleElevationField2(){inputElevation.closest(".form__row").classList.toggle("form__row--hidden"),inputCadence.closest(".form__row").classList.toggle("form__row--hidden")}function _newWorkout2(e){e.preventDefault();var e=_classPrivateFieldGet(this,_mapEvent).latlng,t=e.lat,e=e.lng;inputCadence.value=inputDistance.value=inputDuration.value=inputElevation.value="",L.marker([t,e]).addTo(_classPrivateFieldGet(this,_map)).bindPopup(L.popup({maxWidth:250,minWidth:100,autoClose:!1,closeOnClick:!1,className:"running-popup"})).setPopupContent("trening").openPopup()}var Workout=_createClass(function e(t,o,r){_classCallCheck(this,e),_defineProperty(this,"date",new Date),_defineProperty(this,"id",(new Date+"").slice(-10)),this.coords=t,this.distance=o,this.duration=r}),Running=function(){_inherits(i,Workout);var n=_createSuper(i);function i(e,t,o,r){return _classCallCheck(this,i),(e=n.call(this,e,t,o)).cadence,e.calcPace(),e}return _createClass(i,[{key:"calcPace",value:function(){return this.pace=this.duration/this.distance,this.pace}}]),i}(),Cycling=function(){_inherits(i,Workout);var n=_createSuper(i);function i(e,t,o,r){return _classCallCheck(this,i),(e=n.call(this,e,t,o)).elevationGain=r,e.calcSpeed(),e}return _createClass(i,[{key:"calcSpeed",value:function(){return this.speed=this.distance/(this.duration/60),this.speed}}]),i}(),app=new App;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
